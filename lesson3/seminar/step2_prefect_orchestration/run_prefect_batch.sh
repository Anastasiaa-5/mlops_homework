#!/bin/bash

BATCH_NUMBER=$1

if [ -z "$BATCH_NUMBER" ]; then
    echo "Usage: ./run_prefect_batch.sh <batch_number>"
    echo "Example: ./run_prefect_batch.sh 1"
    exit 1
fi

echo "üöÄ –ó–∞–ø—É—Å–∫ Prefect –ø–∞–π–ø–ª–∞–π–Ω–∞ –¥–ª—è –±–∞—Ç—á–∞ $BATCH_NUMBER..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å MLflow
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ MLflow —Å–µ—Ä–≤–µ—Ä–∞..."
if curl -s http://localhost:5000/health > /dev/null 2>&1; then
    echo "‚úÖ MLflow —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:5000"
else
    echo "‚ùå MLflow —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:5000"
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ: poetry run mlflow ui --host 0.0.0.0 --port 5000"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Prefect (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ Prefect —Å–µ—Ä–≤–µ—Ä–∞..."
if curl -s http://localhost:4200 > /dev/null 2>&1; then
    echo "‚úÖ Prefect UI –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:4200"
else
    echo "‚ÑπÔ∏è  Prefect —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω - –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä"
fi

echo ""
echo "ü§ñ –ó–∞–ø—É—Å–∫ ML –ø–∞–π–ø–ª–∞–π–Ω–∞ —á–µ—Ä–µ–∑ Prefect..."

# –ó–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞
poetry run python flows/training_flow.py $BATCH_NUMBER

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ Prefect –ø–∞–π–ø–ª–∞–π–Ω –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ –¥–ª—è –±–∞—Ç—á–∞ $BATCH_NUMBER"
    echo ""
    echo "üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    if [ -f "models/model_v$BATCH_NUMBER.pkl" ]; then
        model_size=$(stat -f%z "models/model_v$BATCH_NUMBER.pkl" 2>/dev/null || stat -c%s "models/model_v$BATCH_NUMBER.pkl" 2>/dev/null)
        echo "   - ‚úÖ –ú–æ–¥–µ–ª—å: models/model_v$BATCH_NUMBER.pkl ($model_size –±–∞–π—Ç)"
    else
        echo "   - ‚ùå –ú–æ–¥–µ–ª—å: models/model_v$BATCH_NUMBER.pkl (–Ω–µ –Ω–∞–π–¥–µ–Ω–∞)"
    fi

    if [ -f "metrics/test_metrics_v$BATCH_NUMBER.json" ]; then
        echo "   - ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏: metrics/test_metrics_v$BATCH_NUMBER.json"
        if command -v jq > /dev/null 2>&1; then
            accuracy=$(jq -r '.test_accuracy' "metrics/test_metrics_v$BATCH_NUMBER.json" 2>/dev/null)
            f1_score=$(jq -r '.test_f1_score' "metrics/test_metrics_v$BATCH_NUMBER.json" 2>/dev/null)
            if [ "$accuracy" != "null" ] && [ "$f1_score" != "null" ]; then
                echo "     üìà –¢–æ—á–Ω–æ—Å—Ç—å: $accuracy, F1-score: $f1_score"
            fi
        fi
    else
        echo "   - ‚ùå –¢–µ—Å—Ç–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏: metrics/test_metrics_v$BATCH_NUMBER.json (–Ω–µ –Ω–∞–π–¥–µ–Ω—ã)"
    fi

    if [ -f "data/processed/dataset_processed_v$BATCH_NUMBER.csv" ]; then
        data_lines=$(wc -l < "data/processed/dataset_processed_v$BATCH_NUMBER.csv")
        echo "   - ‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: data/processed/dataset_processed_v$BATCH_NUMBER.csv ($((data_lines-1)) –∑–∞–ø–∏—Å–µ–π)"
    else
        echo "   - ‚ùå –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: data/processed/dataset_processed_v$BATCH_NUMBER.csv (–Ω–µ –Ω–∞–π–¥–µ–Ω—ã)"
    fi

    echo ""
    echo "üåê –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:"
    echo "   - MLflow UI: http://localhost:5000"
    echo "   - Prefect UI: http://localhost:4200 (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω —Å–µ—Ä–≤–µ—Ä)"

else
    echo ""
    echo "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∞–π–ø–ª–∞–π–Ω–∞ –¥–ª—è –±–∞—Ç—á–∞ $BATCH_NUMBER"
    echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –∏ —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ MLflow —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω"
    exit 1
fi
