#!/bin/bash

BATCH_NUMBER=$1

if [ -z "$BATCH_NUMBER" ]; then
    echo "Usage: ./run_batch.sh <batch_number>"
    echo "Example: ./run_batch.sh 1"
    exit 1
fi

echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞ –¥–ª—è –±–∞—Ç—á–∞ $BATCH_NUMBER..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å MLflow
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ MLflow —Å–µ—Ä–≤–µ—Ä–∞..."
if curl -s http://localhost:5000/health > /dev/null 2>&1; then
    echo "‚úÖ MLflow —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå MLflow —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:5000"
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ: poetry run mlflow ui --host 0.0.0.0 --port 5000"
fi

echo ""
echo "üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –±–∞—Ç—á–∞ $BATCH_NUMBER..."
poetry run python src/prepare_batch.py $BATCH_NUMBER

echo ""
echo "üîÑ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö..."
poetry run python src/merge_data.py $BATCH_NUMBER

echo ""
echo "‚öôÔ∏è  –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö..."
poetry run python src/preprocess.py $BATCH_NUMBER

echo ""
echo "ü§ñ –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏..."
poetry run python src/train.py $BATCH_NUMBER

echo ""
echo "üìà –û—Ü–µ–Ω–∫–∞ –º–æ–¥–µ–ª–∏..."
poetry run python src/evaluate.py $BATCH_NUMBER

echo ""
echo "‚úÖ –ü–∞–π–ø–ª–∞–π–Ω –∑–∞–≤–µ—Ä—à–µ–Ω –¥–ª—è –±–∞—Ç—á–∞ $BATCH_NUMBER"
echo "üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
echo "   - –ú–æ–¥–µ–ª—å: models/model_v$BATCH_NUMBER.pkl"
echo "   - –ú–µ—Ç—Ä–∏–∫–∏ –æ–±—É—á–µ–Ω–∏—è: metrics/metrics_v$BATCH_NUMBER.json"
echo "   - –ú–µ—Ç—Ä–∏–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: metrics/test_metrics_v$BATCH_NUMBER.json"
echo "   - –î–∞–Ω–Ω—ã–µ: data/processed/dataset_processed_v$BATCH_NUMBER.csv"
